#ifndef _DSI_IRIS5_H_
#define _DSI_IRIS5_H_

/*
 * These files include source code for the Licensed Software that is provided under the terms and
 * conditions of a Master Software License Agreement and its applicable schedules.
 */

#define IRIS_CFG_NUM	2

#define IRIS_FIRMWARE_NAME	"iris5.fw"
#define IRIS_CCF1_FIRMWARE_NAME "iris5_ccf1.fw"
#define IRIS_CCF2_FIRMWARE_NAME "iris5_ccf2.fw"
#define IRIS3_CHIP_VERSION	0x6933
#define IRIS5_CHIP_VERSION	0x6935

#define DIRECT_BUS_HEADER_SIZE 8

#define LUT_LEN 256
#define CM_LUT_GROUP 3 // table 0,3,6 should store at the same address in iris
#define SCALER1D_LUT_NUMBER 9
#define SDR2HDR_LUT_BLOCK_SIZE (128*4)
#define SDR2HDR_LUT2_BLOCK_NUMBER (6)
#define SDR2HDR_LUTUVY_BLOCK_NUMBER (12)
#define SDR2HDR_LUT2_ADDRESS 0x3000
#define SDR2HDR_LUTUVY_ADDRESS 0x6000
#define SDR2HDR_LUT_BLOCK_ADDRESS_INC 0x400
#define SDR2HDR_LUT2_BLOCK_CNT (6)  //for ambient light lut
#define SDR2HDR_LUTUVY_BLOCK_CNT (12)  // for maxcll lut


enum DBC_LEVEL{
	DBC_INIT = 0,
	DBC_OFF,
	DBC_LOW,
	DBC_MIDDLE,
	DBC_HIGH,
	CABC_DLV_OFF = 0xF1,
	CABC_DLV_LOW,
	CABC_DLV_MIDDLE,
	CABC_DLV_HIGH,
};

enum SDR2HDR_LEVEL {
	SDR2HDR_LEVEL0 = 0,
	SDR2HDR_LEVEL1,
	SDR2HDR_LEVEL2,
	SDR2HDR_LEVEL3,
	SDR2HDR_LEVEL4,
	SDR2HDR_LEVEL5,
	SDR2HDR_LEVEL_CNT
};

enum SDR2HDR_TABLE_TYPE {
	SDR2HDR_LUT0 = 0,
	SDR2HDR_LUT1,
	SDR2HDR_LUT2,
	SDR2HDR_LUT3,
	SDR2HDR_UVY0,
	SDR2HDR_UVY1,
	SDR2HDR_UVY2,
	SDR2HDR_INV_UV0,
	SDR2HDR_INV_UV1,
};

enum FRC_PHASE_TYPE {
	FRC_PHASE_V1_128 = 0,
	FRC_PHASE_V2_12TO60_25,
	FRC_PHASE_V2_12TO90_75,
	FRC_PHASE_V2_12TO120_50,
	FRC_PHASE_V2_15TO60_20,
	FRC_PHASE_V2_15TO90_30,
	FRC_PHASE_V2_15TO120_40,
	FRC_PHASE_V2_24TO60_25,
	FRC_PHASE_V2_24TO90_75,
	FRC_PHASE_V2_24TO120_50,
	FRC_PHASE_V2_25TO60_60,
	FRC_PHASE_V2_25TO90_90,
	FRC_PHASE_V2_25TO120_120,
	FRC_PHASE_V2_30TO60_20,
	FRC_PHASE_V2_30TO90_30,
	FRC_PHASE_V2_30TO120_40,
	FRC_PHASE_V2_60TO90_15,
	FRC_PHASE_V2_60TO120_20,
	FRC_PHASE_TYPE_CNT
};

enum LUT_TYPE {
	LUT_IP_START = 128, /*0x80*/
	DBC_LUT = LUT_IP_START,
	CM_LUT,
	SDR2HDR_LUT,
	SCALER1D_LUT,
	AMBINET_HDR_GAIN, /*HDR case*/
	AMBINET_SDR2HDR_LUT, /*SDR2HDR case;*/
	GAMMA_LUT,
	FRC_PHASE_LUT,
	APP_CODE_LUT,
	DPP_DITHER_LUT,
	SCALER1D_PP_LUT,
	DTG_PHASE_LUT,
	LUT_IP_END
};

enum FIRMWARE_STATUS {
	FIRMWARE_LOAD_FAIL,
	FIRMWARE_LOAD_SUCCESS,
	FIRMWARE_IN_USING,
};

enum result {
	IRIS_FAILED = -1,
	IRIS_SUCCESS = 0,
};

enum PANEL_TYPE {
	PANEL_LCD_SRGB = 0,
	PANEL_LCD_P3,
	PANEL_OLED,
};

enum LUT_MODE {
	INTERPOLATION_MODE = 0,
	SINGLE_MODE,
};

enum SCALER_IP_TYPE {
	SCALER_INPUT = 0,
	SCALER_PP,
};

struct ocp_header {
	u32 header;
	u32 address;
};

#endif // _DSI_IRIS5_H_
